<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="04de9fd0-c6a3-4b1c-8bb5-52d25c1eddc3" name="Steve@STEVEIBPDESKTOP 2010-11-22 07:46:34" runUser="SteveIBPDesktop\Steve" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="60c2b78c-affc-4f37-9333-f6ec362971eb">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment enabled="false" runDeploymentRoot="Steve_STEVEIBPDESKTOP 2010-11-22 07_46_34" />
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
  </TestSettings>
  <Times creation="2010-11-22T07:46:34.6542968-05:00" queuing="2010-11-22T07:46:34.8789062-05:00" start="2010-11-22T07:46:35.0312500-05:00" finish="2010-11-22T07:46:35.5332031-05:00" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="ReturnNewInstanceByDefault" storage="c:\users\steve\documents\my dropbox\pluralsightcurrent\007 - singleton pattern\demo\unittests\bin\debug\tests.dll" id="4df233c3-34fd-3c0a-9099-1e7b348ceb4e">
      <Execution timeOut="1800000" id="15cb1864-406e-4d6e-b28f-b2a1f4af2037" />
      <TestMethod codeBase="C:/Users/Steve/Documents/My Dropbox/PluralsightCurrent/007 - Singleton Pattern/Demo/UnitTests/bin/Debug/Tests.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Tests.UnityShould, Tests, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="ReturnNewInstanceByDefault" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testId="4df233c3-34fd-3c0a-9099-1e7b348ceb4e" executionId="15cb1864-406e-4d6e-b28f-b2a1f4af2037" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <UnitTestResult executionId="15cb1864-406e-4d6e-b28f-b2a1f4af2037" testId="4df233c3-34fd-3c0a-9099-1e7b348ceb4e" testName="ReturnNewInstanceByDefault" computerName="STEVEIBPDESKTOP" duration="00:00:00.3455938" startTime="2010-11-22T07:46:35.0712890-05:00" endTime="2010-11-22T07:46:35.4697265-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="15cb1864-406e-4d6e-b28f-b2a1f4af2037">
      <Output>
        <ErrorInfo>
          <Message>Test method Tests.UnityShould.ReturnNewInstanceByDefault threw exception: 
Microsoft.Practices.Unity.ResolutionFailedException: Resolution of the dependency failed, type = "FileLoggerSample.Interfaces.IFileLogger", name = "(none)".
Exception occurred while: Calling constructor FileLoggerSample.Impl.FileLoggers.FileLogger().
Exception is: IOException - The process cannot access the file 'c:\dev\scratch\logs\logfile.txt' because it is being used by another process.
-----------------------------------------------
At the time of the exception, the container was:

  Resolving FileLoggerSample.Impl.FileLoggers.FileLogger,(none) (mapped from FileLoggerSample.Interfaces.IFileLogger, (none))
  Calling constructor FileLoggerSample.Impl.FileLoggers.FileLogger()
 ---&gt; System.IO.IOException: The process cannot access the file 'c:\dev\scratch\logs\logfile.txt' because it is being used by another process.</Message>
          <StackTrace>    at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath)
   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)
   at System.IO.StreamWriter.CreateFile(String path, Boolean append)
   at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize)
   at System.IO.StreamWriter..ctor(String path, Boolean append)
   at System.IO.File.AppendText(String path)
   at FileLoggerSample.Impl.FileLoggers.BaseFileLogger.GetFileStream() in C:\Users\Steve\Documents\My Dropbox\PluralsightCurrent\007 - Singleton Pattern\Demo\FileLogger\Impl\FileLoggers\BaseFileLogger.cs:line 39
   at FileLoggerSample.Impl.FileLoggers.BaseFileLogger..ctor(IDelayConfig delayConfig) in C:\Users\Steve\Documents\My Dropbox\PluralsightCurrent\007 - Singleton Pattern\Demo\FileLogger\Impl\FileLoggers\BaseFileLogger.cs:line 23
   at FileLoggerSample.Impl.FileLoggers.BaseFileLogger..ctor() in C:\Users\Steve\Documents\My Dropbox\PluralsightCurrent\007 - Singleton Pattern\Demo\FileLogger\Impl\FileLoggers\BaseFileLogger.cs:line 16
   at FileLoggerSample.Impl.FileLoggers.FileLogger..ctor() in C:\Users\Steve\Documents\My Dropbox\PluralsightCurrent\007 - Singleton Pattern\Demo\FileLogger\Impl\FileLoggers\FileLogger.cs:line 8
   at BuildUp_FileLoggerSample.Impl.FileLoggers.FileLogger(IBuilderContext )
   at Microsoft.Practices.ObjectBuilder2.DynamicMethodBuildPlan.BuildUp(IBuilderContext context)
   at Microsoft.Practices.ObjectBuilder2.BuildPlanStrategy.PreBuildUp(IBuilderContext context)
   at Microsoft.Practices.ObjectBuilder2.StrategyChain.ExecuteBuildUp(IBuilderContext context)
   at Microsoft.Practices.Unity.UnityContainer.DoBuildUp(Type t, Object existing, String name, IEnumerable`1 resolverOverrides)
 --- End of inner exception stack trace ---
    at Microsoft.Practices.Unity.UnityContainer.DoBuildUp(Type t, Object existing, String name, IEnumerable`1 resolverOverrides)
   at Microsoft.Practices.Unity.UnityContainer.Resolve(Type t, String name, ResolverOverride[] resolverOverrides)
   at Microsoft.Practices.Unity.UnityContainerExtensions.Resolve[T](IUnityContainer container, ResolverOverride[] overrides)
   at Tests.UnityShould.ReturnNewInstanceByDefault() in C:\Users\Steve\Documents\My Dropbox\PluralsightCurrent\007 - Singleton Pattern\Demo\UnitTests\UnityShould.cs:line 26
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
</TestRun>